var express = require("express");
var router = module.exports = express.Router();

function getCompByReq(req){
    var body = req.body;
    return {
        id : body.id,
        code : body.code,
        name : body.name,
        isBase : body.isBase,
        img : body.img,
        spec : body.spec,
        mates : body.mates,
        unit : body.unit,
        remark : body.remark
    }
}

router.get("/shed/shed_mgr", function(req, res){
    res.render("shed/shed_mgr");
});
router.get("/shed/proj_mgr", function(req, res){
    res.render("shed/proj_mgr");
});

//++++++++++++++++++++++shed 开始+++++++++++++++++++++++++++++++++
//++++++++++++++++++++++shed 结束+++++++++++++++++++++++++++++++++

//++++++++++++++++++++++proj 开始+++++++++++++++++++++++++++++++++
function getProjByReq(req){
    var body = req.body;
    return {
        id : body.id,
        name : body.name,
        state : body.state,
        remark : body.remark
    }
}
router.post("/shed/proj/list", function(req, res, next){
    req.dbClient.pageGridByReq("project", {_orderBy : ["name"]}, req, {}, function(err, data){
        if(err) return next(err);
        res.send(data);
    })
});
router.post("/shed/proj/create", function(req, res, next){
    var proj = getProjByReq(req);
    req.dbClient.insert("project", proj, function(err){
        if(err) return next(err);
        res.success();
    });
});
router.post("/shed/proj/update", function(req, res, next){
    var proj = getProjByReq(req);
    req.dbClient.update("project",proj , {id : proj.id}, function(err){
        if(err) return next(err);
        res.success();
    });
});
router.post("/shed/proj/delete", function(req, res, next){
    var comp = getProjByReq(req);
    req.dbClient.del("project", {id : comp.id}, function(err){
        if(err) return next(err);
        res.success();
    });
});
//++++++++++++++++++++++proj 结束+++++++++++++++++++++++++++++++++

//++++++++++++++++++++++exp 开始+++++++++++++++++++++++++++++++++
//++++++++++++++++++++++exp 结束+++++++++++++++++++++++++++++++++

//++++++++++++++++++++++sche 开始+++++++++++++++++++++++++++++++++
//++++++++++++++++++++++sche 结束+++++++++++++++++++++++++++++++++

//++++++++++++++++++++++comp 开始+++++++++++++++++++++++++++++++++
//零件管理界面链接
router.get("/shed/comp_mgr", function(req, res){
    res.render("shed/comp_mgr");
});
//零件列表
router.post("/shed/comp/list", function(req, res, next){
    req.dbClient.pageGridByReq("comp", {_orderBy : ["code", "name"]}, req, {code:"=?"}, function(err, data){
        if(err) return next(err);
        res.send(data);
    })
});
//新增零件
router.post("/shed/comp/create", function(req, res, next){
    var comp = getCompByReq(req);
    req.dbClient.insert("comp", comp, function(err){
        if(err) return next(err);
        res.success();
    });
});
//修改零件
router.post("/shed/comp/update", function(req, res, next){
    var comp = getCompByReq(req);
    req.dbClient.update("comp",comp , {id : comp.id}, function(err){
        if(err) return next(err);
        res.success();
    });
});
//删除零件
router.post("/shed/comp/delete", function(req, res, next){
    var id = req.body.id;
    req.dbClient.del("compDtl", "id = ? or childId = ?", [id, id], function(err){//先删除子零件相关
        if(err) return next(err);
        req.dbClient.del("comp", {id : id}, function(err1){//再删除零件本身
            if(err1) return next(err1);
            res.success();
        });
    });
});
//子零件列表
router.post("/shed/comp/children", function(req, res, next){
    var parentId = req.body.parentId;
    var sql = "select a.parentId, a.count, b.* from (select id parentId, childId, count from compDtl where id = ?) a left join comp b on a.childId = b.id ";
    req.dbClient.pageGridSqlByReq(sql, [parentId], req, {code:"=?"}, function(err, data){
        if(err) return next(err);
        res.send(data);
    })
});
//绑定子零件时的零件列表
router.post("/shed/comp/compToBeSelected", function(req, res, next){
    var parentId = req.body.parentId;
    var currChildId = req.body.currChildId;
    var sql = "select * from comp where id != ? and isBase = 1 and id not in (select childId id from compdtl where id = ? ) order by code, name";
    req.dbClient.pageGridSqlByReq(sql, [parentId, currChildId], req, {code:"=?"}, function(err, data){
        if(err) return next(err);
        res.send(data);
    })
});
function getCompDtlByReq(req){
    var body = req.body;
    return {
        id : body.parentId,
        childId : body.id,
        count : body.count
    }
}
//添加子零件
router.post("/shed/comp/addChild", function(req, res, next){
    var compDtl = getCompDtlByReq(req);
    req.dbClient.insert("compDtl", compDtl, function(err){
        if(err) return next(err);
        res.success();
    })
});
//修改子零件
router.post("/shed/comp/updateChild", function(req, res, next){
    var body = req.body;
    var value = {childId : body.id, count : body.count};
    var cnd = {id : body.parentId, childId : body.oldId};
    req.dbClient.update("compDtl", value, cnd, function(err){
        if(err) return next(err);
        res.success();
    })
});
//删除子零件
router.post("/shed/comp/deleteChild", function(req, res, next){
    var body = req.body;
    req.dbClient.del("compDtl", {id : body.parentId, childId : body.id}, function(err){
        if(err) return next(err);
        res.success();
    })
});
//++++++++++++++++++++++comp 结束+++++++++++++++++++++++++++++++++