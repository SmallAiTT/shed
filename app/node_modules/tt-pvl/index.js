var async = require("async");
exports.router = require("./lib/router/pvlRouter.js");
exports.embed = function(app){

    app.use(require("./lib/biz/pvlFilter.js"));

    function walkDir(dir, router){
        if(fs.statSync(dir).isDirectory()){
            var files = fs.readdirSync(dir);
            for(var i = 0; i < files.length; ++i){
                walkDir(path.join(dir, files[i]), router);
            }
        }else{
            var extname = path.extname(dir);
            if(extname && extname.toLowerCase() == ".jade"){
                var urlPath = path.relative(setOpt.views, dir);
                urlPath = urlPath.replace(/\\/g, "/");
                urlPath = urlPath.substring(0, urlPath.length - 5);
                router.get("/" + urlPath, function(req, res){
                    res.render(urlPath, {
                        title : "Small",
                        pvlDs : req.pvlDs
                    })
                })
            }
        }
    }
    app.addRouter = function(router){
        var viewsDir = setOpt.views;
        var moduleName = router.moduleName;//router规定moduleName作为模块的名字，需要和views中的直接目录保持一致
        var modulePath = path.join(viewsDir, moduleName);
        var files = fs.readdirSync(modulePath);
        for(var i = 0; i < files.length; ++i){
            var file = files[i];
            var extname = path.extname(file);
            if(extname && extname.toLowerCase() == ".jade"){
                var urlPath = path.relative(viewsDir, path.join(modulePath, file));
                urlPath = urlPath.replace(/\\/g, "/");
                urlPath = urlPath.substring(0, urlPath.length - 5);
                router.get("/" + urlPath, (function(req, res){
                    res.render(this.url);
                }).bind({url : urlPath}))
            }
        }
        this.use("/", router);
    }

    app.use("/", exports.router);

    exports.router.get("/", function(req, res){
        res.render("main");
    });
}